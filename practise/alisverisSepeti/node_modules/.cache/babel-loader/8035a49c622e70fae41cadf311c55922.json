{"ast":null,"code":"import { types } from \"../types\";\nimport { bookInitialState } from \"./bookInitialState\";\nexport const bookReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : bookInitialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === types.EKLE) {\n    return { ...state,\n      cart: state.cart.find(cartItem => cartItem.id === action.payload.id) ? state.cart.map(cartItem => cartItem.id === action.payload.id ? { ...cartItem,\n        count: cartItem.count + 1\n      } : cartItem) : [...state.cart, { ...action.payload,\n        count: 1\n      }]\n    };\n  }\n\n  if (action.type === types.ARTTİR) {\n    return { ...state,\n      cart: state.cart.map(cartItem => cartItem.id === action.payload ? { ...cartItem,\n        count: cartItem.count + 1\n      } : cartItem)\n    };\n  }\n\n  if (action.type === types.AZALT) {\n    return { ...state,\n      cart: state.cart.map(cartItem => cartItem.id === action.payload ? { ...cartItem,\n        count: cartItem.count > 1 ? cartItem.count - 1 : 1\n      } : cartItem)\n    };\n  }\n\n  if (action.type === types.CİKART) {\n    return { ...state,\n      cart: state.cart.filter(cartItem => cartItem.id !== action.payload)\n    };\n  }\n};","map":{"version":3,"sources":["C:/Users/CELİL/Desktop/alisverisSepeti/src/store/book/bookReducer.js"],"names":["types","bookInitialState","bookReducer","state","action","type","EKLE","cart","find","cartItem","id","payload","map","count","ARTTİR","AZALT","CİKART","filter"],"mappings":"AAAA,SAASA,KAAT,QAAsB,UAAtB;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AAEA,OAAO,MAAMC,WAAW,GAAG,YAAsC;AAAA,MAArCC,KAAqC,uEAA7BF,gBAA6B;AAAA,MAAXG,MAAW;;AAC/D,MAAIA,MAAM,CAACC,IAAP,KAAgBL,KAAK,CAACM,IAA1B,EAAgC;AAC9B,WAAO,EACL,GAAGH,KADE;AAELI,MAAAA,IAAI,EAAEJ,KAAK,CAACI,IAAN,CAAWC,IAAX,CAAiBC,QAAD,IAAcA,QAAQ,CAACC,EAAT,KAAgBN,MAAM,CAACO,OAAP,CAAeD,EAA7D,IACFP,KAAK,CAACI,IAAN,CAAWK,GAAX,CAAgBH,QAAD,IACbA,QAAQ,CAACC,EAAT,KAAgBN,MAAM,CAACO,OAAP,CAAeD,EAA/B,GACI,EAAE,GAAGD,QAAL;AAAeI,QAAAA,KAAK,EAAEJ,QAAQ,CAACI,KAAT,GAAiB;AAAvC,OADJ,GAEIJ,QAHN,CADE,GAMF,CAAC,GAAGN,KAAK,CAACI,IAAV,EAAgB,EAAE,GAAGH,MAAM,CAACO,OAAZ;AAAqBE,QAAAA,KAAK,EAAE;AAA5B,OAAhB;AARC,KAAP;AAUD;;AACD,MAAIT,MAAM,CAACC,IAAP,KAAgBL,KAAK,CAACc,MAA1B,EAAkC;AAChC,WAAO,EACL,GAAGX,KADE;AAELI,MAAAA,IAAI,EAAEJ,KAAK,CAACI,IAAN,CAAWK,GAAX,CAAgBH,QAAD,IACnBA,QAAQ,CAACC,EAAT,KAAgBN,MAAM,CAACO,OAAvB,GACI,EAAE,GAAGF,QAAL;AAAeI,QAAAA,KAAK,EAAEJ,QAAQ,CAACI,KAAT,GAAiB;AAAvC,OADJ,GAEIJ,QAHA;AAFD,KAAP;AAQD;;AACD,MAAIL,MAAM,CAACC,IAAP,KAAgBL,KAAK,CAACe,KAA1B,EAAiC;AAC/B,WAAO,EACL,GAAGZ,KADE;AAELI,MAAAA,IAAI,EAAEJ,KAAK,CAACI,IAAN,CAAWK,GAAX,CAAgBH,QAAD,IACnBA,QAAQ,CAACC,EAAT,KAAgBN,MAAM,CAACO,OAAvB,GACI,EACE,GAAGF,QADL;AAEEI,QAAAA,KAAK,EAAEJ,QAAQ,CAACI,KAAT,GAAiB,CAAjB,GAAqBJ,QAAQ,CAACI,KAAT,GAAiB,CAAtC,GAA0C;AAFnD,OADJ,GAKIJ,QANA;AAFD,KAAP;AAWD;;AACD,MAAIL,MAAM,CAACC,IAAP,KAAgBL,KAAK,CAACgB,MAA1B,EAAkC;AAChC,WAAO,EACL,GAAGb,KADE;AAELI,MAAAA,IAAI,EAAEJ,KAAK,CAACI,IAAN,CAAWU,MAAX,CAAmBR,QAAD,IAAcA,QAAQ,CAACC,EAAT,KAAgBN,MAAM,CAACO,OAAvD;AAFD,KAAP;AAID;AACF,CA1CM","sourcesContent":["import { types } from \"../types\";\r\nimport { bookInitialState } from \"./bookInitialState\";\r\n\r\nexport const bookReducer = (state = bookInitialState, action) => {\r\n  if (action.type === types.EKLE) {\r\n    return {\r\n      ...state,\r\n      cart: state.cart.find((cartItem) => cartItem.id === action.payload.id)\r\n        ? state.cart.map((cartItem) =>\r\n            cartItem.id === action.payload.id\r\n              ? { ...cartItem, count: cartItem.count + 1 }\r\n              : cartItem\r\n          )\r\n        : [...state.cart, { ...action.payload, count: 1 }],\r\n    };\r\n  }\r\n  if (action.type === types.ARTTİR) {\r\n    return {\r\n      ...state,\r\n      cart: state.cart.map((cartItem) =>\r\n        cartItem.id === action.payload\r\n          ? { ...cartItem, count: cartItem.count + 1 }\r\n          : cartItem\r\n      ),\r\n    };\r\n  }\r\n  if (action.type === types.AZALT) {\r\n    return {\r\n      ...state,\r\n      cart: state.cart.map((cartItem) =>\r\n        cartItem.id === action.payload\r\n          ? {\r\n              ...cartItem,\r\n              count: cartItem.count > 1 ? cartItem.count - 1 : 1,\r\n            }\r\n          : cartItem\r\n      ),\r\n    };\r\n  }\r\n  if (action.type === types.CİKART) {\r\n    return {\r\n      ...state,\r\n      cart: state.cart.filter((cartItem) => cartItem.id !== action.payload),\r\n    };\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}