{"ast":null,"code":"import { types } from \"../types\";\nimport { listeInitialState } from \"./listeInitialState\";\nexport const listeReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : listeInitialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const maxIdDizi = state.liste.map(maxId => {\n    object.id;\n  });\n  const maxId = Math.max.apply(null, maxIdDizi);\n\n  if (action.type === types.EKLE) {\n    console.log(state.liste);\n    return { ...state,\n      liste: [...state.liste, {\n        id: maxId + 1,\n        baslik: action.payload,\n        tamamlandi: false\n      }]\n    };\n  }\n\n  if (action.type === types.ISARETLE) {\n    return { ...state,\n      liste: state.liste.map(item => item.id === action.payload ? { ...item,\n        tamamlandi: !item.tamamlandi\n      } : item)\n    };\n  }\n\n  if (action.type === types.TEMIZLE) {\n    return { ...state,\n      liste: state.liste.filter(item => item.tamamlandi === false)\n    };\n  }\n};","map":{"version":3,"sources":["C:/05_React_js/practise/TODOLIST/src/store/liste/listeReducer.js"],"names":["types","listeInitialState","listeReducer","state","action","maxIdDizi","liste","map","maxId","object","id","Math","max","apply","type","EKLE","console","log","baslik","payload","tamamlandi","ISARETLE","item","TEMIZLE","filter"],"mappings":"AAAA,SAASA,KAAT,QAAsB,UAAtB;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AAMA,OAAO,MAAMC,YAAY,GAAG,YAAuC;AAAA,MAAtCC,KAAsC,uEAA9BF,iBAA8B;AAAA,MAAXG,MAAW;AAE/D,QAAMC,SAAS,GAACF,KAAK,CAACG,KAAN,CAAYC,GAAZ,CAAgBC,KAAK,IAAG;AACpCC,IAAAA,MAAM,CAACC,EAAP;AACH,GAFe,CAAhB;AAIA,QAAMF,KAAK,GAACG,IAAI,CAACC,GAAL,CAASC,KAAT,CAAe,IAAf,EAAqBR,SAArB,CAAZ;;AACF,MAAID,MAAM,CAACU,IAAP,KAAgBd,KAAK,CAACe,IAA1B,EAAgC;AAC9BC,IAAAA,OAAO,CAACC,GAAR,CAAYd,KAAK,CAACG,KAAlB;AACA,WAAO,EACL,GAAGH,KADE;AAELG,MAAAA,KAAK,EAAE,CACL,GAAGH,KAAK,CAACG,KADJ,EAEL;AACEI,QAAAA,EAAE,EAAEF,KAAK,GAAC,CADZ;AAEEU,QAAAA,MAAM,EAAEd,MAAM,CAACe,OAFjB;AAGEC,QAAAA,UAAU,EAAE;AAHd,OAFK;AAFF,KAAP;AAYD;;AAED,MAAIhB,MAAM,CAACU,IAAP,KAAgBd,KAAK,CAACqB,QAA1B,EAAoC;AAClC,WAAO,EACL,GAAGlB,KADE;AAELG,MAAAA,KAAK,EAAEH,KAAK,CAACG,KAAN,CAAYC,GAAZ,CAAiBe,IAAD,IACrBA,IAAI,CAACZ,EAAL,KAAYN,MAAM,CAACe,OAAnB,GACI,EAAE,GAAGG,IAAL;AAAWF,QAAAA,UAAU,EAAE,CAACE,IAAI,CAACF;AAA7B,OADJ,GAEIE,IAHC;AAFF,KAAP;AAQD;;AACD,MAAIlB,MAAM,CAACU,IAAP,KAAgBd,KAAK,CAACuB,OAA1B,EAAmC;AACjC,WAAO,EACL,GAAGpB,KADE;AAELG,MAAAA,KAAK,EAAEH,KAAK,CAACG,KAAN,CAAYkB,MAAZ,CAAoBF,IAAD,IAAUA,IAAI,CAACF,UAAL,KAAoB,KAAjD;AAFF,KAAP;AAID;AACF,CAvCM","sourcesContent":["import { types } from \"../types\";\r\nimport { listeInitialState } from \"./listeInitialState\";\r\n\r\n\r\n\r\n\r\n\r\nexport const listeReducer = (state = listeInitialState, action) => {\r\n\r\n    const maxIdDizi=state.liste.map(maxId =>{\r\n        object.id\r\n    });\r\n\r\n    const maxId=Math.max.apply(null, maxIdDizi);\r\n  if (action.type === types.EKLE) {\r\n    console.log(state.liste);\r\n    return {\r\n      ...state,\r\n      liste: [\r\n        ...state.liste,\r\n        {\r\n          id: maxId+1,\r\n          baslik: action.payload,\r\n          tamamlandi: false,\r\n        },\r\n      ],\r\n    };\r\n    \r\n  }\r\n\r\n  if (action.type === types.ISARETLE) {\r\n    return {\r\n      ...state,\r\n      liste: state.liste.map((item) =>\r\n        item.id === action.payload\r\n          ? { ...item, tamamlandi: !item.tamamlandi }\r\n          : item\r\n      ),\r\n    };\r\n  }\r\n  if (action.type === types.TEMIZLE) {\r\n    return {\r\n      ...state,\r\n      liste: state.liste.filter((item) => item.tamamlandi === false),\r\n    };\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}