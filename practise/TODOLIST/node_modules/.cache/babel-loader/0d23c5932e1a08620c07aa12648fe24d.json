{"ast":null,"code":"import { types } from \"../types\";\nimport { listeInitialState } from \"./listeInitialState\";\nexport const listeReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : listeInitialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === types.EKLE) {\n    return { ...state,\n      liste: [...state.liste, {\n        id: state.liste.reduce(item.id, liste.id + 1),\n        baslik: action.payload,\n        tamamlandi: false\n      }]\n    };\n  }\n\n  if (action.type === types.ISARETLE) {\n    return { ...state,\n      liste: state.liste.map(item => {\n        item.id === action.payload ? { ...item,\n          tamamlandi: !item.tamamlandi\n        } : item;\n      })\n    };\n  }\n\n  if (action.type === types.TEMIZLE) {\n    return { ...state,\n      liste: state.liste.filter(item => item.tamamlandi === false)\n    };\n  }\n};","map":{"version":3,"sources":["C:/05_React_js/practise/TODOLIST/src/store/liste/listeReducer.js"],"names":["types","listeInitialState","listeReducer","state","action","type","EKLE","liste","id","reduce","item","baslik","payload","tamamlandi","ISARETLE","map","TEMIZLE","filter"],"mappings":"AAAA,SAASA,KAAT,QAAsB,UAAtB;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AACA,OAAO,MAAMC,YAAY,GAAG,YAAuC;AAAA,MAAtCC,KAAsC,uEAA9BF,iBAA8B;AAAA,MAAXG,MAAW;;AACjE,MAAIA,MAAM,CAACC,IAAP,KAAgBL,KAAK,CAACM,IAA1B,EAAgC;AAC9B,WAAO,EACL,GAAGH,KADE;AAELI,MAAAA,KAAK,EAAE,CACL,GAAGJ,KAAK,CAACI,KADJ,EAEL;AACEC,QAAAA,EAAE,EAAEL,KAAK,CAACI,KAAN,CAAYE,MAAZ,CAAmBC,IAAI,CAACF,EAAxB,EAA2BD,KAAK,CAACC,EAAN,GAAS,CAApC,CADN;AAEEG,QAAAA,MAAM,EAAEP,MAAM,CAACQ,OAFjB;AAGEC,QAAAA,UAAU,EAAE;AAHd,OAFK;AAFF,KAAP;AAWD;;AACD,MAAIT,MAAM,CAACC,IAAP,KAAgBL,KAAK,CAACc,QAA1B,EAAoC;AAClC,WAAO,EACL,GAAGX,KADE;AAELI,MAAAA,KAAK,EAAEJ,KAAK,CAACI,KAAN,CAAYQ,GAAZ,CAAiBL,IAAD,IAAU;AAC/BA,QAAAA,IAAI,CAACF,EAAL,KAAYJ,MAAM,CAACQ,OAAnB,GACI,EAAE,GAAGF,IAAL;AAAWG,UAAAA,UAAU,EAAE,CAACH,IAAI,CAACG;AAA7B,SADJ,GAEIH,IAFJ;AAGD,OAJM;AAFF,KAAP;AAQD;;AACD,MAAIN,MAAM,CAACC,IAAP,KAAgBL,KAAK,CAACgB,OAA1B,EAAmC;AACjC,WAAO,EACL,GAAGb,KADE;AAELI,MAAAA,KAAK,EAAEJ,KAAK,CAACI,KAAN,CAAYU,MAAZ,CAAoBP,IAAD,IAAUA,IAAI,CAACG,UAAL,KAAoB,KAAjD;AAFF,KAAP;AAID;AACF,CA9BM","sourcesContent":["import { types } from \"../types\";\r\nimport { listeInitialState } from \"./listeInitialState\";\r\nexport const listeReducer = (state = listeInitialState, action) => {\r\n  if (action.type === types.EKLE) {\r\n    return {\r\n      ...state,\r\n      liste: [\r\n        ...state.liste,\r\n        {\r\n          id: state.liste.reduce(item.id,liste.id+1),\r\n          baslik: action.payload,\r\n          tamamlandi: false,\r\n        },\r\n      ],\r\n    };\r\n  }\r\n  if (action.type === types.ISARETLE) {\r\n    return {\r\n      ...state,\r\n      liste: state.liste.map((item) => {\r\n        item.id === action.payload\r\n          ? { ...item, tamamlandi: !item.tamamlandi }\r\n          : item;\r\n      }),\r\n    };\r\n  }\r\n  if (action.type === types.TEMIZLE) {\r\n    return {\r\n      ...state,\r\n      liste: state.liste.filter((item) => item.tamamlandi === false),\r\n    };\r\n  }\r\n};"]},"metadata":{},"sourceType":"module"}